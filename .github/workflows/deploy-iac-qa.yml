name: Deploy Infrastructure as Code - QA

on:
  push:
    branches:
      - main
    paths:
      - 'iac/**'
      - '.github/workflows/deploy-iac-qa.yml'
  workflow_call: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: qa
      url: ${{ steps.invoke_url.outputs.api_url }}
    defaults:
      run:
        working-directory: ./iac

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"
          terraform_wrapper: false

      - name: Create tfvars file
        run: |
          cat > qa.tfvars <<EOF
          environment = "qa"
          project_name = "${{ vars.PROJECT_NAME }}"
          team_name = "${{ vars.TEAM_NAME }}"
          aws_region = "${{ vars.AWS_REGION }}"
          vpc_id = "${{ vars.VPC_ID }}"
          vpc_cidr = "${{ vars.VPC_CIDR }}"
          public_subnet_ids = ${{ vars.PUBLIC_SUBNET_IDS }}
          private_subnet_ids = ${{ vars.PRIVATE_SUBNET_IDS }}
          allowed_origins = ${{ vars.ALLOWED_ORIGINS }}
          container_environment = {
            ENV = "qa"
            DB_URL = "${{ vars.DB_URL }}"
            DB_USERNAME = "${{ secrets.DB_USERNAME }}"
            DB_PASSWORD = "${{ secrets.DB_PASSWORD }}"
            ALLOWED_ORIGINS = "${{ join(',', vars.ALLOWED_ORIGINS) }}"
          }
          EOF

      - name: Terraform Init
        id: init
        run: terraform init
        
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Select Terraform Workspace
        id: workspace
        run: terraform workspace select qa || terraform workspace new qa

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file=qa.tfvars -out=tfplan

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve tfplan 

      - name: Get Invoke URL
        id: invoke_url
        run: |
          echo "api_url=$(terraform output -raw api_gateway_invoke_url)/api/v1" >> $GITHUB_OUTPUT 
