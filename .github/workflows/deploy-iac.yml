name: Deploy IaC

on:
  push:
    branches:
      - dev
    paths:
      - 'iac/**'
      - '.github/workflows/deploy-iac.yml'
  workflow_call: {}

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      PROJECT_NAME: ${{ vars.PROJECT_NAME }}
      TEAM_NAME: ${{ vars.TEAM_NAME }}

    defaults:
      run:
        working-directory: ./iac

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create terraform.tfvars
        run: |
          cat > terraform.tfvars << EOF
          aws_region         = "${{ vars.AWS_REGION }}"
          project_name      = "${{ vars.PROJECT_NAME }}"
          team_name        = "${{ vars.TEAM_NAME }}"
          vpc_id           = "${{ vars.VPC_ID }}"
          vpc_cidr         = "${{ vars.VPC_CIDR }}"
          public_subnet_ids  = ${{ vars.PUBLIC_SUBNET_IDS }}
          private_subnet_ids = ${{ vars.PRIVATE_SUBNET_IDS }}
          container_environment = {
            ENV         = "${{ vars.ENV }}"
            DB_URL      = "${{ vars.DB_URL }}"
            DB_USERNAME = "${{ secrets.DB_USERNAME }}"
            DB_PASSWORD = "${{ secrets.DB_PASSWORD }}"
          }
          EOF

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve