name: Deploy Infrastructure as Code - Dev

on:
  push:
    branches:
      - dev
    paths:
      - 'iac/**'
      - '.github/workflows/deploy-iac-dev.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./iac

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          TF_VAR_project_name: ${{ vars.PROJECT_NAME }}
          TF_VAR_team_name: ${{ vars.TEAM_NAME }}
          TF_VAR_aws_region: ${{ vars.AWS_REGION }}
          TF_VAR_vpc_id: ${{ vars.VPC_ID }}
          TF_VAR_vpc_cidr: ${{ vars.VPC_CIDR }}
          TF_VAR_public_subnet_ids: ${{ vars.PUBLIC_SUBNET_IDS }}
          TF_VAR_private_subnet_ids: ${{ vars.PRIVATE_SUBNET_IDS }}
          TF_VAR_db_url: ${{ vars.DB_URL_DEV }}
          TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_container_environment: '{"ENV":"dev","DB_URL":"${{ vars.DB_URL_DEV }}","DB_USERNAME":"${{ secrets.DB_USERNAME }}","DB_PASSWORD":"${{ secrets.DB_PASSWORD }}"}'

      - name: Terraform Validate
        run: terraform validate

      - name: Select Terraform Workspace
        run: terraform workspace select dev || terraform workspace new dev

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan 