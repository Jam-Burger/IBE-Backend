name: Deploy Backend - Dev

on:
  push:
    branches:
      - dev
    paths:
      - 'backend/**'
      - '.github/workflows/**-dev.yml'

jobs:
  deploy-infrastructure:
    uses: ./.github/workflows/deploy-iac-dev.yml
    secrets: inherit

  deploy-backend:
    needs: deploy-infrastructure
    name: Deploy Backend
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      ECR_REPOSITORY: ${{ vars.PROJECT_NAME }}-${{ vars.TEAM_NAME }}-dev-repo
      ECS_CLUSTER: ${{ vars.PROJECT_NAME }}-${{ vars.TEAM_NAME }}-dev-cluster
      ECS_SERVICE: ${{ vars.PROJECT_NAME }}-${{ vars.TEAM_NAME }}-dev-service

    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build \
          --platform linux/amd64 \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Manual Approval
      uses: trstringer/manual-approval@v1
      with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: ${{ vars.QA_TEAM_APPROVERS }}
          minimum-approvals: 1
          issue-title: "Approve QA Backend Deployment"
          issue-body: "Please review the backend changes and approve the deployment to QA environment."
          exclude-workflow-initiator-as-approver: false

    - name: Update ECS service
      run: |
        aws ecs update-service \
          --cluster ${{ env.ECS_CLUSTER }} \
          --service ${{ env.ECS_SERVICE }} \
          --force-new-deployment 